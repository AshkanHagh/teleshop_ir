services:
  devpostgres:
    image: postgres:16.4-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
    profiles: [dev]
  
  devredis:
    image: redis/redis-stack:latest
    restart: always
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - 6379:6379
    volumes:
      - redis_data:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    profiles: [dev]

  postgres:
    image: postgres:16.4-alpine
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - private
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 10s
      timeout: 3s
      retries: 3
    profiles: [production]

  redis:
    image: redis/redis-stack:latest
    restart: always
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - private
    volumes:
      - redis_data:/var/lib/redis/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    profiles: [production]

  hono:
    build:
      context: ./
      dockerfile: Dockerfile
    restart: always
    env_file:
      - ./.env
    volumes:
      - backup:/app/src/database/backups
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
      redis:
        condition: service_healthy
        restart: true
    networks:
      - private
      - public
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT}"]
      interval: 5s
      retries: 5
      start_period: 15s
      timeout: 5s
    profiles: [production]

networks:
  private:
  public:

volumes:
  postgres_data:
  backup:
  redis_data: